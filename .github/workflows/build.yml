name: Build and Upload

on:
  push:
    branches: [ master, release/*, feature/* ]
    tags: [ 'snapshot-*' ]
  pull_request:
    branches: [ master, release/*, feature/* ]
  workflow_dispatch:

jobs:
  build-upload-release:
    runs-on: ubuntu-latest
    env:
      INSTALL_DIR: "/tmp/binutils"
      BINUTILS_ARTIFACT: "binutils-${{ github.run_id }}-${{ github.sha }}-linux-x86_64.tar.gz"
      OMFTOOLS_ARTIFACT: "omftools-${{ github.run_id }}-${{ github.sha }}-linux-x86_64.tar.gz"
      RELEASE_BINUTILS: "binutils-${{ github.ref_name }}-linux-x86_64.tar.gz"
      RELEASE_OMFTOOLS: "omftools-${{ github.ref_name }}-linux-x86_64.tar.gz"

    steps:
    - uses: actions/checkout@v4

    - name: Setup build environment
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libgmp-dev libmpfr-dev

    - name: Configure
      run: |
        mkdir -p $INSTALL_DIR
        mkdir -p build
        cd build
        ../configure --prefix=$INSTALL_DIR || exit 1

    - name: Build
      run: |
        cd build
        make CFLAGS="-g -Wno-unused-but-set-variable -Wno-unused-function" CXXFLAGS="-Wno-error -Wno-deprecated-declarations" || exit 1
        make install || exit 1        

    - name: Package
      run: |
        set -e
        tar -czvf ${{ env.OMFTOOLS_ARTIFACT }} --transform='s|nm|omf-nm|' --transform='s|objdump|omf-objdump|' -C $INSTALL_DIR/bin nm objdump
        tar -czvf ${{ env.BINUTILS_ARTIFACT }} -C $INSTALL_DIR bin include lib share
        sha256sum ${{ env.OMFTOOLS_ARTIFACT }} > ${{ env.OMFTOOLS_ARTIFACT }}.sha256
        sha256sum ${{ env.BINUTILS_ARTIFACT }} > ${{ env.BINUTILS_ARTIFACT }}.sha256

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: builds
        path: |
          ./${{ env.BINUTILS_ARTIFACT }}
          ./${{ env.OMFTOOLS_ARTIFACT }}
          ./${{ env.BINUTILS_ARTIFACT }}.sha256
          ./${{ env.OMFTOOLS_ARTIFACT }}.sha256
        retention-days: 5

    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      id: create_release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: |
          ${{ env.BINUTILS_ARTIFACT }}
          ${{ env.OMFTOOLS_ARTIFACT }}
          ${{ env.BINUTILS_ARTIFACT }}.sha256
          ${{ env.OMFTOOLS_ARTIFACT }}.sha256
        draft: true
        prerelease: true
        name: Release ${{ github.ref_name }}
        tag_name: ${{ github.ref_name }}

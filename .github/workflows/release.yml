name: Build, Release and Upload

on:
  push:
    tags:
      - '*.*'        # Triggers the workflow on version tags, e.g., 2.42
      - '*.*-*'      # Triggers the workflow on build tags, e.g., 2.42-build1 

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      INSTALL_DIR: "/tmp/binutils"

    steps:
    - uses: actions/checkout@v4

    - name: Setup build environment
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libgmp-dev libmpfr-dev

    - name: Extract tag name
      id: extract_tag
      run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

    - name: Configure
      run: |
       mkdir $INSTALL_DIR
       mkdir build
       cd build
       ../configure \
          --disable-werror \
          --with-mmap \
          --prefix=$INSTALL_DIR

    - name: Build
      run: |
       cd build
       make
       make install

    - name: Package
      run: |
        tar -czvf omftools-${{ env.TAG_NAME }}-linux-x86_64.tar.gz --transform='s|nm|omf-nm|' --transform='s|objdump|omf-objdump|' -C $INSTALL_DIR/bin nm objdump
        tar -czvf binutils-${{ env.TAG_NAME }}-linux-x86_64.tar.gz -C $INSTALL_DIR bin include lib share

    - name: Create a release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload release asset - binutils
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./binutils-${{ env.TAG_NAME }}-linux-x86_64.tar.gz
        asset_name: binutils-${{ env.TAG_NAME }}-linux-x86_64.tar.gz
        asset_content_type: application/gzip

    - name: Upload release asset - omftools
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./omftools-${{ env.TAG_NAME }}-linux-x86_64.tar.gz
        asset_name: omftools-${{ env.TAG_NAME }}-linux-x86_64.tar.gz
        asset_content_type: application/gzip          
